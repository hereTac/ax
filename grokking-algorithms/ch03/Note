# Recursion
* [Recursion or Iteration?](https://stackoverflow.com/questions/72209/recursion-or-iteration/72694#72694)
  * `Loops may achieve a performance gain for your program. Recursion may achieve a performance gain for your programmer. Choose which is more important in your situation!`
  * `使用循环会对你的程序运行来讲性能更好,使用递归会对你的程序代码来讲阅读更好,在你的场景下选择合适你的解决方案`
* Base case & Recursion case
  * base case: for stop the recursion(must have)
  * recursion case: for recursion
* The stack
  * _push_ (insert)
  * _pop_ (remove and read)
* Exercises 
  * 3.1 
    * greet2 函数在 greet 函数内部
  * 3.2 
    * stack oom
* Recap
  * Recursion is when a function calls itself.
    * 递归指的是方法调用方法自己
  * Every recursive function has two cases: the base case
  and the recursive case.
    * 每个递归都有两个条件：base case 和 recursive case
  * A stack has two operations: push and pop.
    * 栈有两个操作符：push 和 pop
  * All function calls go onto the call stack.
    * 所有的函数调用都进入 call stack
  * The call stack can get very large, which takes up a lot of memory.
    * call stack 可能很大，这种会占用很多的内存
- [] 实现 stack 数据结构
- [] 学会实践 tail stack